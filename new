Array.prototype.containsArray = function(val) {
    var hash = {};
    for(var i=0; i<this.length; i++) {
        hash[this[i]] = i;
    }
    return hash.hasOwnProperty(val);
}


function createUser(name, marker) {

    this.name = name;
    this.marker = marker;

    let winCount = 0;

    function won() {
        winCount++;
        console.log(winCount);
    }


    return {
        name,
        marker,
        won,
    }
}


const user1 = createUser('user1', 'x');
const user2 = createUser('user2', 'o');


console.log(user1);
console.log(user2);

user1.won();
user1.won();



const game = (function() {

    const divs = document.querySelectorAll('div');
    const turn = document.querySelector('.turn');
    const result = document.querySelector('.result');

    turn.textContent = user1.marker

    let gameBoard =['', '', '', '', '', '', '', '', ''];

    let indexArrayX = [];
    let indexArrayO = [];

    const winners = [
        [0, 1, 2],
        [3, 4, 5],
        [6, 7, 8],
        [0, 3, 6],
        [1, 4, 7],
        [2, 5, 8],
        [0, 4, 8],
        [2, 4, 6]
    ];

    function filterX() {

        for (let i = 0;i < gameBoard.length; i++) {
            if (gameBoard[i] == "x" && !indexArrayX.includes(i)) {
                indexArrayX.push(i);
                indexArrayX.sort();

            }
         }
         checkWinX();
    }

    function filterO() {

        for (let i = 0;i < gameBoard.length; i++) {
            if (gameBoard[i] == "o" && !indexArrayO.includes(i)) {
                indexArrayO.push(i);
                indexArrayO.sort();
            }
         }
         checkWinO();
    }

    function checkWinX() {
        let slicedArrayX = ['', ''];

        for ( let i = 0; i < 12; i++) {
            slicedArrayX.splice(i, 0, indexArrayX.slice(i, i + 3));
        }

        console.log(slicedArrayX);
        if (winners.containsArray(slicedArrayX[0]) == true ||
            winners.containsArray(slicedArrayX[1]) == true ||
            winners.containsArray(slicedArrayX[2]) == true) {
                result.textContent = ' X WINS';
        }
    }

    function checkWinO() {
        let slicedArrayO = ['', ''];

        for ( let i = 0; i < 12; i++) {
            slicedArrayO.splice(i, 0, indexArrayO.slice(i, i + 3));
        }

        if (winners.containsArray(slicedArrayO[0]) == true ||
            winners.containsArray(slicedArrayO[1]) == true ||
            winners.containsArray(slicedArrayO[2]) == true) {
                result.textContent = ' O WINS';
        }
    }

    
    function render() {
        let i = 0;
        divs.forEach((div) => {
            div.textContent = gameBoard[i];
            i++;
        })
    }
    
    let counter = 0;
    
    for (let i = 0; i < divs.length; i++) {
        divs[i].addEventListener("click", () => {
            
            if ( divs[i].textContent !== '') {
                return;
            } else if (counter % 2 == 1) {
                addO(i);
                turn.textContent = user1.marker;
                counter++;
            } else {
                addX(i);
                turn.textContent = user2.marker
                counter++;
            }

            if ( counter == 9) {
                console.log('GAME IS A TIE!!!');
            }
        })
    }

    window.addEventListener('click', filterX)
    window.addEventListener('click', filterO)
    
    function addX(i) {
        gameBoard.slice( i, i+ 1, 'x');
        gameBoard[i] = 'x';
        divs[i].textContent = 'x';
    }

    function addO(i) {
        gameBoard.slice( i, i+ 1, 'o');
        gameBoard[i] = 'o';
        divs[i].textContent = 'o';
    }

    render();
    
    return {
        addX: addX,
    }
})();

const array = [[1,2,3], [4,5,6]];

console.log(array[1][0])

// see if you can set the exact numbers to exact places to
// fit winners array

// try splicing from end to start and make a new array with that
// compare